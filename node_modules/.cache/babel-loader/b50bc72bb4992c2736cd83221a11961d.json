{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/gs_academy/gs_premium/react2020/react-app/src/components/Booklist.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst Booklist = props => {\n  const [bookData, setBookData] = useState(null);\n  useEffect(() => {\n    var _props$getData;\n\n    const result = (_props$getData = props.getData) === null || _props$getData === void 0 ? void 0 : _props$getData.call(props, props.language).then(response => setBookData(response));\n  }, [props]); // `?`を使うことで、`getData`が存在する場合のみ関数を実行できる\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, bookData === null ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"now loading...\") : bookData.data.items.map((x, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, \" \", x.volumeInfo.title), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#7f7f7f'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, \"[\\\"\", x.volumeInfo.authors, \"\\\"]\"), \"\\u2003\", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#7f7f7f'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, x.volumeInfo.publisher)))));\n};\n\nexport default Booklist;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/gs_academy/gs_premium/react2020/react-app/src/components/Booklist.jsx"],"names":["React","useState","useEffect","Booklist","props","bookData","setBookData","result","getData","language","then","response","data","items","map","x","index","fontSize","volumeInfo","title","color","authors","publisher"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,UAAMK,MAAM,qBAAGH,KAAK,CACjBI,OADS,mDAAG,oBAAAJ,KAAK,EACPA,KAAK,CAACK,QADC,CAAL,CAEZC,IAFY,CAENC,QAAD,IAAcL,WAAW,CAACK,QAAD,CAFlB,CAAf;AAGD,GAJQ,EAIN,CAACP,KAAD,CAJM,CAAT,CAF0B,CAO1B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,KAAK,IAAb,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAGCA,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoBC,GAApB,CAAwB,CAACC,CAAD,EAAIC,KAAJ,kBACtB;AAAG,IAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCF,CAAC,CAACG,UAAF,CAAaC,KAAlD,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACKL,CAAC,CAACG,UAAF,CAAaG,OADlB,QAHF,yBAOE;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,CAAC,CAACG,UAAF,CAAaI,SAAjD,CAPF,CADF,CAJJ,CADF,CADF;AAqBD,CA9BD;;AAgCA,eAAenB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Booklist = (props) => {\n  const [bookData, setBookData] = useState(null);\n  useEffect(() => {\n    const result = props\n      .getData?.(props.language)\n      .then((response) => setBookData(response));\n  }, [props]);\n  // `?`を使うことで、`getData`が存在する場合のみ関数を実行できる\n\n  return (\n    <div>\n      <ul>\n        {bookData === null ? (\n          <p>now loading...</p>\n        ) : (\n          bookData.data.items.map((x, index) => (\n            <p key={index}>\n              <span style={{ fontSize: '20px' }}> {x.volumeInfo.title}</span>\n              <br />\n              <span style={{ color: '#7f7f7f' }}>\n                [\"{x.volumeInfo.authors}\"]\n              </span>\n              &emsp;\n              <span style={{ color: '#7f7f7f' }}>{x.volumeInfo.publisher}</span>\n            </p>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Booklist;\n"]},"metadata":{},"sourceType":"module"}